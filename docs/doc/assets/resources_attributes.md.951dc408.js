import{_ as s,o as a,c as e,V as t}from"./chunks/framework.7caa47d6.js";const h=JSON.parse('{"title":"List of special attributes","description":"","frontmatter":{},"headers":[],"relativePath":"resources/attributes.md","filePath":"resources/attributes.md"}'),l={name:"resources/attributes.md"},n=t(`<h1 id="list-of-special-attributes" tabindex="-1">List of special attributes <a class="header-anchor" href="#list-of-special-attributes" aria-label="Permalink to &quot;List of special attributes&quot;">​</a></h1><h2 id="universal-attributes" tabindex="-1">Universal attributes <a class="header-anchor" href="#universal-attributes" aria-label="Permalink to &quot;Universal attributes&quot;">​</a></h2><h3 id="ref" tabindex="-1">ref <a class="header-anchor" href="#ref" aria-label="Permalink to &quot;ref&quot;">​</a></h3><p><code>ref=&lt;name&gt;</code> create a reference to an HTML element. This reference is then accessible in the render function via <code>this.ref(name)</code> or <code>this.refs(name)</code>.</p><h2 id="component-attributes" tabindex="-1">Component attributes <a class="header-anchor" href="#component-attributes" aria-label="Permalink to &quot;Component attributes&quot;">​</a></h2><h3 id="datas-name" tabindex="-1">datas-(name) <a class="header-anchor" href="#datas-name" aria-label="Permalink to &quot;datas-(name)&quot;">​</a></h3><p>Allows passing a JSON object as data.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">x-component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">datas-product</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;name&quot;: &quot;Apple&quot;, &quot;quantity&quot;: 3}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">x-component</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Note that <code>x-datas-(name)</code> does not exist, because you can pass objects directly through variables with data-binding (<code>x-product=&quot;product&quot;</code>).</p></div><h2 id="attributs-d-elements-html" tabindex="-1">Attributs d&#39;éléments html <a class="header-anchor" href="#attributs-d-elements-html" aria-label="Permalink to &quot;Attributs d&#39;éléments html&quot;">​</a></h2><p>Any attribute prefixed with <code>x-</code> that is not listed below will be automatically bound to the variable whose name matches its value.</p><h3 id="x-text" tabindex="-1">x-text <a class="header-anchor" href="#x-text" aria-label="Permalink to &quot;x-text&quot;">​</a></h3><p>Replaces the textual content of the element.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-O5Ena" id="tab-P6ilQvE" checked="checked"><label for="tab-P6ilQvE">render</label><input type="radio" name="group-O5Ena" id="tab-QmdERBj"><label for="tab-QmdERBj">datas</label></div><div class="blocks"><div class="language-html active"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">x-text</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">I&#39;m visible</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">datas[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div></div></div><h3 id="x-html" tabindex="-1">x-html <a class="header-anchor" href="#x-html" aria-label="Permalink to &quot;x-html&quot;">​</a></h3><p>Replaces the HTML content of the element (be careful, this can break the links, to be used only as a last resort).</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">datas[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;h1&gt;My content&lt;/h1&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(</span><span style="color:#676E95;font-style:italic;">/*html*/</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;div x-html=&quot;html&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="x-append" tabindex="-1">x-append <a class="header-anchor" href="#x-append" aria-label="Permalink to &quot;x-append&quot;">​</a></h3><p>Add a list of nodes as last children of the element.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">datas[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">el</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(</span><span style="color:#676E95;font-style:italic;">/*html*/</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;div x-append=&quot;el&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="x-prepend" tabindex="-1">x-prepend <a class="header-anchor" href="#x-prepend" aria-label="Permalink to &quot;x-prepend&quot;">​</a></h3><p>Add a list of nodes as first children of the element.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">datas[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">el</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(</span><span style="color:#676E95;font-style:italic;">/*html*/</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;div x-prepend=&quot;el&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="x-show" tabindex="-1">x-show <a class="header-anchor" href="#x-show" aria-label="Permalink to &quot;x-show&quot;">​</a></h3><p>Conditionally add a <code>display: none</code> style rule depending on whether the variable is true or false.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-CQnAu" id="tab-NSzuaoe" checked="checked"><label for="tab-NSzuaoe">render</label><input type="radio" name="group-CQnAu" id="tab-0owaKfJ"><label for="tab-0owaKfJ">datas</label></div><div class="blocks"><div class="language-html active"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">x-show</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">myvar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">I&#39;m visible</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">datas[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myvar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span></code></pre></div></div></div>`,26),o=[n];function p(c,r,i,d,D,y){return a(),e("div",null,o)}const u=s(l,[["render",p]]);export{h as __pageData,u as default};
